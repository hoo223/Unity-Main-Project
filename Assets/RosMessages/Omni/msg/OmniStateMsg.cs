//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Omni
{
    [Serializable]
    public class OmniStateMsg : Message
    {
        public const string k_RosMessageName = "omni_msgs/OmniState";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public bool locked;
        public bool close_gripper;
        public Geometry.PoseMsg pose;
        //  meters
        public Geometry.Vector3Msg current;
        //  Amperes
        public Geometry.Vector3Msg velocity;
        //  meters/s

        public OmniStateMsg()
        {
            this.header = new Std.HeaderMsg();
            this.locked = false;
            this.close_gripper = false;
            this.pose = new Geometry.PoseMsg();
            this.current = new Geometry.Vector3Msg();
            this.velocity = new Geometry.Vector3Msg();
        }

        public OmniStateMsg(Std.HeaderMsg header, bool locked, bool close_gripper, Geometry.PoseMsg pose, Geometry.Vector3Msg current, Geometry.Vector3Msg velocity)
        {
            this.header = header;
            this.locked = locked;
            this.close_gripper = close_gripper;
            this.pose = pose;
            this.current = current;
            this.velocity = velocity;
        }

        public static OmniStateMsg Deserialize(MessageDeserializer deserializer) => new OmniStateMsg(deserializer);

        private OmniStateMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.locked);
            deserializer.Read(out this.close_gripper);
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.current = Geometry.Vector3Msg.Deserialize(deserializer);
            this.velocity = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.locked);
            serializer.Write(this.close_gripper);
            serializer.Write(this.pose);
            serializer.Write(this.current);
            serializer.Write(this.velocity);
        }

        public override string ToString()
        {
            return "OmniStateMsg: " +
            "\nheader: " + header.ToString() +
            "\nlocked: " + locked.ToString() +
            "\nclose_gripper: " + close_gripper.ToString() +
            "\npose: " + pose.ToString() +
            "\ncurrent: " + current.ToString() +
            "\nvelocity: " + velocity.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
